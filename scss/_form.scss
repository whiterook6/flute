.form {
	/* Padding, Sizing */
	.static { // for spans and divs that hold numbers and values like an input would
		padding: $input-padding;
	}

	button, input[type='text'], input[type='password'], input[type='number'], select, textarea {
		padding: $input-padding;
		display: block;
		width: 100%;
		outline: none;
		margin: 0; // safari is introducing margin: 2px 0; to buttons.
		resize: none;
	}

	.inline button, button.inline,
	.inline input[type='text'], input[type='text'].inline,
	.inline input[type='number'], input[type='number'].inline,
	.inline input[type='password'], input[type='password'].inline,
	.inline select, select.inline,
	.inline textarea, textarea .inline {
		display: inline-block;
		width: auto;
	}

	/* Filled items: button, input['submit']: .button */
	.button {
		cursor: pointer;
		padding: $input-padding;
	}

	/* Bordered glowy items: input[text], textarea, select: .input */
	.input {
		border-radius: $border-radius;
		border: 1px solid $grey;
		-webkit-transition: border-color ease-in-out .1s,-webkit-box-shadow ease-in-out .1s,color ease-in-out .1s;
		-o-transition: border-color ease-in-out .1s,box-shadow ease-in-out .1s,color ease-in-out .1s;
		transition: border-color ease-in-out .1s,box-shadow ease-in-out .1s,color ease-in-out .1s;

	    &:focus {
			@include glow($grey);
			border-color: $grey;
			color: #000;
		}

		&:disabled {
			border-color: $disabled-grey;
			background-color: #eee;
			color: #666;
			cursor: not-allowed;
		}
	}

	.error .input, .input.error {
		border-color: $red;

		&:focus {
			@include glow($red);
			color: #000;
		}

		&:disabled {
			border-color: $disabled-red;
			color: $disabled-red;
			background-color: $light-red;
		}
	}

	.warning .input, .input.warning {
		border-color: $yellow;

		&:focus {
			@include glow($yellow);
			color: #000;
		}

		&:disabled {
			border-color: $disabled-yellow;
			color: $disabled-yellow;
			background-color: $light-yellow;
		}
	}

	.success .input, .input.success {
		border-color: $green;

		&:focus {
			@include glow($green);
			color: #000;
		}

		&:disabled {
			border-color: $disabled-green;
			color: $disabled-green;
			background-color: $light-green;
		}
	}

	.notice .input, .input.notice {
		border-color: $blue; // Note that default focus color already matches, so is omitted

		&:focus {
			color: #000;
		}

		&:disabled {
			border-color: $disabled-blue;
			color: $disabled-blue;
			background-color: $light-blue;
		}
	}

	/* Filled items: button, input['submit']: .button */
	.button {
		background-color: $blue;
		border-radius: $border-radius;
		border: 1px solid $blue;
		color: white;

		&:hover {
			background-color: $green;
			border-color: $green;
			color: white;
		}

		&:disabled {
			background-color: $disabled-blue;
			border-color: $disabled-blue;
			color: #eee;
			cursor: not-allowed;
		}
	}

	.error .button, .button.error {
		border-color: $red;
		background-color: $red;

		&:hover {
			background-color: white;
			color: $red;
		}

		&:disabled {
			background-color: $disabled-red;
			border-color: $disabled-red;
			color: #eee;
		}
	}

	.warning .button, .button.warning {
		border-color: $yellow;
		background-color: $yellow;

		&:hover {
			background-color: white;
			color: $yellow;
		}

		&:disabled {
			background-color: $disabled-yellow;
			border-color: $disabled-yellow;
			color: #eee;
		}
	}

	.success .button, .button.success {
		border-color: $green;
		background-color: $green;

		&:hover {
			background-color: white;
			color: $green;
		}

		&:disabled {
			background-color: $disabled-green;
			border-color: $disabled-green;
			color: #eee;
		}
	}

	.notice .button, .button.notice {
		border-color: $blue;
		background-color: $blue;

		&:hover {
			background-color: white;
			color: $blue;
		}

		&:disabled {
			background-color: $disabled-blue;
			border-color: $disabled-blue;
			color: #eee;
		}
	}

	// input groups
	.input-group {
		display: flex;

		> * {
			border-radius: 0;
			border: 1px solid $grey;
			border-width: 1px 0px 1px 1px;
			padding: $input-padding;
		}

		> .input-addon {
			flex-grow: 0;
			background-color: $light-grey;
			border-color: $grey;
			color: $grey;
		}

		> .input {
			border-radius: 0;
		}

		> *:first-child {
			border-top-left-radius: $border-radius;
			border-bottom-left-radius: $border-radius;
		}

		.input {
			display: initial;
		}

		> *:last-child {
			border-top-right-radius: $border-radius;
			border-bottom-right-radius: $border-radius;
			border-right-width: 1px;
			border-right-style: solid;
		}
	}

	.notice .input-addon, .input-addon.notice {
		background-color: $light-blue;
		border-color: $blue;
		color: $blue;
	}

	.success .input-addon, .input-addon.success {
		background-color: $light-green;
		border-color: $green;
		color: $green;
	}

	.warning .input-addon, .input-addon.warning {
		background-color: $light-yellow;
		border-color: $yellow;
		color: $yellow;
	}

	.error .input-addon, .input-addon.error {
		background-color: $light-red;
		border-color: $red;
		color: $red;
	}

	// Dropdowns
	.dropdown {
		position: relative;
		display: block;

		input[type='text'], input[type='password'], input[type='number']{
			padding-right: 2rem;
		}

		.drawer {
			display: none;
			background-color: #fff;
		}

		&:after {
			content: "\f078";
			display: block;
			font-family: FontAwesome;
			height: 1rem;
			line-height: 1rem;
			position: absolute;
			right: 3px;
			text-align: center;
			top: 50%;
			transform: translateY(-50%);
			width: 2rem;
		}

		&.open {
			&:after {
				content: "\f077";
			}

			.drawer {
				padding-top: $border-radius;
				position: absolute;
				margin-top: (-$border-radius);
				border: 1px solid;
				border-top: 0;
				display: block;
				right: 0;
				left: 0;
			}
		}
	}
}